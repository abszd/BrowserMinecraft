(function(){"use strict";class z{constructor(){this.chunks=new Map,this.blockTable=null,this.worldSeed=69420,this._globalPerm=null}initialize(e){this.worldSeed=e.worldSeed,this.blockTable=e.blockTable,this.amplitude=e.amplitude,this.chunkSize=e.chunkSize,this.chunkHeight=e.chunkHeight,this.TRANSPARENT_BLOCKS=new Set(e.transparentBlocks)}generateChunk(e,i){const t=new M(this,e,i);t.generateTerrain(),t.createTrees(),t.buildLakes();const s=`${e},${i}`;return this.chunks.set(s,t),{chunkId:s,chunkX:e,chunkZ:i,grid:Array.from(t.grid.entries()),waterBlocks:t.waterBlocks,size:t.size,height:t.height,lastAccessed:t.lastAccessed}}updateBlock(e,i,t,s,o,c=!1){const n=this.chunks.get(e);return n?(n.setBlock(i,t,s,o),c&&n.buildLakes(),{chunkId:e,grid:Array.from(n.grid.entries()),waterBlocks:n.waterBlocks,lastAccessed:n.lastAccessed}):null}getBlock(e,i,t,s){const o=this.chunks.get(e);return o?o.getBlock(i,t,s):-1}findSpawnLocation(e,i=2){const t=this.chunks.get(e);return t?t.findSpawnLocation(i):null}unloadChunk(e){this.chunks.delete(e)}generatePermTable(e){const i=new Array(512);let t=e;const s=()=>(t=(t*1664525+1013904223)%4294967296,t/4294967296);for(let o=0;o<256;o++)i[o]=Math.floor(s()*256),i[o+256]=i[o];return i}}class M{constructor(e,i,t){this.worker=e,this.chunkX=i,this.chunkZ=t,this.size=e.chunkSize,this.height=e.chunkHeight,this.grid=new Map,this.waterBlocks=[],this.lastAccessed=Date.now(),this.waterLevel=6,this.TRANSPARENT_BLOCKS=new Set([-1,4,5])}generateTerrain(){const e=new Map,i=3,t=2;for(let s=-1;s<=this.size;s++)for(let o=-1;o<=this.size;o++){const c=s+this.chunkX*this.size,n=o+this.chunkZ*this.size;e.set(`${s},${o}`,this.generateHeightAt(c,n))}for(let s=0;s<this.size;s++)for(let o=0;o<this.size;o++){const c=e.get(`${s},${o}`),n=e.get(`${s+1},${o}`)||c,r=e.get(`${s},${o+1}`)||c,h=e.get(`${s-1},${o}`)||c,l=e.get(`${s},${o-1}`)||c,a=(n-h)/2,k=(r-l)/2,g=Math.sqrt(a*a+k*k);for(let u=0;u<c;u++){let d;u<c-4?d=1:u<c-1?g>t?d=1:d=0:g>i?d=1:d=2,this.setBlock(s,u,o,d)}}}generateHeightAt(e,i){const t=this.worker.amplitude||32,s=3,o=.002;let c=0,n=o,r=0,h=1,l=.5;for(let k=0;k<s;k++){const g=e*n,u=i*n,d=this.perlin2d(g,u);c+=d*h,r+=h,n*=2,h*=l}n=.02,h=1,r=0;for(let k=0;k<s;k++){const g=e*n,u=i*n,d=this.perlin2d(g,u);c+=d*h,r+=h,n*=2,h*=l}c/=r;let a=(c+1)*t/2;return a=Math.pow(a/t,1.5)*t,a=t/(1+Math.exp(-10*(a/t-.5))),Math.floor(Math.max(0,Math.min(t,a)))+5}perlin2d(e,i){this.worker._globalPerm||(this.worker._globalPerm=this.worker.generatePermTable(this.worker.worldSeed)),this._perm=this.worker._globalPerm;const t=[[1,1],[-1,1],[1,-1],[-1,-1],[1,0],[-1,0],[0,1],[0,-1]],s=(f,B,b)=>{const m=t[f&7];return m[0]*B+m[1]*b},o=f=>f*f*f*(f*(f*6-15)+10),c=(f,B,b)=>f+b*(B-f),n=Math.floor(e)&255,r=Math.floor(i)&255,h=e-Math.floor(e),l=i-Math.floor(i),a=o(h),k=o(l),g=this._perm[n]+r,u=this._perm[n+1]+r,d=this._perm[g],A=this._perm[g+1],$=this._perm[u],S=this._perm[u+1],T=s(this._perm[d],h,l),_=s(this._perm[$],h-1,l),L=s(this._perm[A],h,l-1),y=s(this._perm[S],h-1,l-1),C=c(T,_,a),I=c(L,y,a);return c(C,I,k)}createTrees(){for(let i=2;i<this.size-2;i++)for(let t=2;t<this.size-2;t++){const s=this.getHighestBlock(i,t);if(s===-1||s<=this.waterLevel)continue;this.getBlock(i,s,t)===2&&Math.random()<.01&&this.buildTree(i,s,t)}}buildTree(e,i,t){const s=5+Math.floor(Math.random()*4);for(let n=1;n<=s&&!(i+n>=this.height);n++)this.setBlock(e,i+n,t,3);const o=Math.max(3,s-3),c=s+1;for(let n=o;n<=c;n++){let r=2;n===c&&(r=1);for(let h=-r;h<=r;h++)for(let l=-r;l<=r;l++){if(Math.abs(h)===2&&Math.abs(l)===2||h===0&&l===0&&n!==c)continue;const a=e+h,k=t+l;a>=0&&a<this.size&&k>=0&&k<this.size&&i+n<this.height&&this.getBlock(a,i+n,k)===-1&&this.setBlock(a,i+n,k,4)}}}buildLakes(){this.waterBlocks=[];for(let e=0;e<this.size;e++)for(let i=0;i<this.size;i++)for(let t=0;t<this.height;t++){const s=this.getBlock(e,t,i);if(s===5){const c=this.getBlock(e,t+1,i)!==5;this.waterBlocks.push({x:e,y:t,z:i,isTopWater:c});continue}if(!(t>this.waterLevel||s!==-1)&&t>=3){this.setBlock(e,t,i,5);const o=t===this.waterLevel;this.waterBlocks.push({x:e,y:t,z:i,isTopWater:o})}}}setBlock(e,i,t,s){this.lastAccessed=Date.now();const o=`${e} ${i} ${t}`;s===-1||s===null?this.grid.delete(o):(this.grid.set(o,s),this.grid.get(`${e} ${i-1} ${t}`)===2&&!this.TRANSPARENT_BLOCKS.has(s)&&this.grid.set(`${e} ${i-1} ${t}`,0))}getBlock(e,i,t){this.lastAccessed=Date.now();const s=this.grid.get(`${e} ${i} ${t}`);return s===void 0?-1:s}getHighestBlock(e,i){for(let t=this.height-1;t>=0;t--)if(this.getBlock(e,t,i)!==-1)return t;return-1}findSpawnLocation(e=2){for(let t=0;t<100;t++){const s=Math.floor(Math.random()*(this.size-2))+1,o=Math.floor(Math.random()*(this.size-2))+1,c=this.getHighestBlock(s,o);if(c===-1)continue;const n=this.getBlock(s,c,o);if(n!==-1&&!this.worker.TRANSPARENT_BLOCKS.has(n)){let r=!0;for(let h=1;h<=e;h++)if(this.getBlock(s,c+h,o)!==-1){r=!1;break}if(r)return[s+this.chunkX*this.size+.5,c+e/2,o+this.chunkZ*this.size+.5]}}return[this.chunkX*this.size+this.size/2,this.height/2,this.chunkZ*this.size+this.size/2]}}const p=new z;self.onmessage=function(w){const{type:e,chunkX:i,chunkZ:t,params:s,chunkId:o,x:c,y:n,z:r,blockType:h,objHeight:l}=w.data;try{switch(e){case"initialize":p.initialize(s),self.postMessage({type:"initialized",success:!0});break;case"generateChunk":const a=p.generateChunk(i,t);self.postMessage({type:"chunkGenerated",data:a});break;case"updateBlock":const k=p.updateBlock(o,c,n,r,h,w.data.updateWaterMesh);k&&self.postMessage({type:"chunkUpdated",data:k});break;case"getBlock":const g=p.getBlock(o,c,n,r);self.postMessage({type:"blockResult",chunkId:o,blockId:g});break;case"findSpawn":const u=p.findSpawnLocation(o,l);self.postMessage({type:"spawnFound",chunkId:o,location:u});break;case"unloadChunk":p.unloadChunk(o),self.postMessage({type:"chunkUnloaded",chunkId:o});break;default:throw new Error(`Unknown message type: ${e}`)}}catch(a){self.postMessage({type:"error",chunkId:o,error:a.message,stack:a.stack})}}})();
